{"version":3,"sources":["hooks/useForm.js","types/types.js","actions/auth.js","components/auth/LoginScreen.js","routes/PrivateRoutes.js","components/auth/RegisterScreen.js","components/pages/ProfileScreen.js","routes/PublicRoute.js","components/auth/SignOutScreen.js","components/auth/FacebookLoginScreen.js","routes/AppRoutes.js","reducers/authReducer.js","store/store.js","reducers/registerReducer.js","AuthApp.js","index.js","aws-exports.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","types","startLoginUsernamePassword","username","password","tokenRecaptcha","dispatch","a","login","Auth","signIn","captcha","auth","lasestrellas_auth","token","signInUserSession","idToken","localStorage","setItem","JSON","stringify","loginSuccess","loginError","message","removeItem","registerToCognito","email","register","signUp","attributes","clientMetadata","registerSuccess","registerError","type","payload","error","errorCode","logout","Recaptcha","require","LoginScreen","history","useDispatch","loading","setLoading","manual","setManual","setTokenRecaptcha","useSelector","state","formValues","handleLogin","e","preventDefault","verifyCallback","response","useEffect","Hub","listen","event","data","validUser","className","style","zIndex","position","top","right","Toast","animation","autohide","onClose","Header","Body","onClick","replace","onSubmit","id","aria-hidden","required","tabIndex","onChange","maxLength","title","placeholder","marginBottom","textAlign","width","sitekey","render","Spinner","size","href","federatedSignIn","customState","PrivateRoute","isAuthenticated","Component","component","rest","props","to","RegisterScreen","handleRegister","setTimeout","toggleToast","toLogin","init","ProfileScreen","PublicRoute","SignOutScreen","signOut","global","console","log","FacebookLoginScreen","window","FB","createScript","getAWSCredentials","accessToken","expires_at","expiresIn","Date","getTime","api","fields","user","then","credentials","fbAsyncInit","script","document","createElement","src","async","onload","initFB","body","appendChild","appId","cookie","xfbml","version","fb","getLoginStatus","status","authResponse","scope","AppRoutes","path","parse","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","AuthApp","Amplify","configure","region","userPoolId","userPoolWebClientId","mandatorySignIn","oauth","domain","redirectSignIn","redirectSignOut","responseType","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c37564ab.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","export const types = {\r\n\r\n    authLogin: '[auth] Login',\r\n    authLoginSuccess: '[auth] Login success',\r\n    authLoginError: '[auth] Login error',\r\n\r\n    authLogout: '[auth] Logout',\r\n\r\n    authRegister: '[auth] Register',\r\n    authRegisterSuccess: '[auth] Register success',\r\n    authRegisterError: '[auth] Register error',\r\n    authRegisterReset: '[auth] Register init',\r\n}\r\n","import {types} from \"../types/types\";\r\nimport {Auth} from 'aws-amplify';\r\n\r\nexport const startLoginUsernamePassword = (username, password, tokenRecaptcha) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(login(username, password));\r\n            const auth = await Auth.signIn(\r\n                username,\r\n                password,\r\n                {\r\n                    captcha: tokenRecaptcha\r\n                }\r\n            );\r\n\r\n            const lasestrellas_auth = {\r\n                token: auth.signInUserSession.idToken,\r\n                username: auth.username,\r\n            }\r\n            localStorage.setItem('lasestrellas_auth', JSON.stringify(lasestrellas_auth));\r\n            dispatch(loginSuccess(username, password, lasestrellas_auth.token));\r\n            // dispatch(validUser(username, password, auth))\r\n        } catch (error) {\r\n            dispatch(loginError(username, password, error.message));\r\n            localStorage.removeItem('lasestrellas_auth');\r\n        }\r\n    }\r\n}\r\n\r\nexport const validUser = (username, password, auth) => {\r\n    return async (dispatch) => {\r\n        const lasestrellas_auth = {\r\n            token: auth.signInUserSession.idToken,\r\n            username: auth.username,\r\n        }\r\n        localStorage.setItem('lasestrellas_auth', JSON.stringify(lasestrellas_auth));\r\n        dispatch(loginSuccess(username, password, lasestrellas_auth.token));\r\n    }\r\n}\r\n\r\nexport const registerToCognito = (username, password, email, tokenRecaptcha) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(register());\r\n\r\n            await Auth.signUp({\r\n                username,\r\n                password,\r\n                attributes: {\r\n                    email, // optional\r\n                },\r\n                clientMetadata: {\r\n                    captcha: tokenRecaptcha\r\n                }\r\n            });\r\n\r\n            dispatch(registerSuccess());\r\n        } catch (error) {\r\n            dispatch(registerError(error.message));\r\n            localStorage.removeItem('lasestrellas_auth');\r\n        }\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await Auth.signOut({global: true});\r\n            dispatch(logout());\r\n            localStorage.removeItem('lasestrellas_auth');\r\n        } catch (error) {\r\n            console.log('error signing out: ', error);\r\n        }\r\n    }\r\n}\r\n\r\n// login\r\nexport const login = (username, password) => ({\r\n    type: types.authLogin,\r\n    payload: {\r\n        username,\r\n        password\r\n    }\r\n})\r\n\r\nexport const loginSuccess = (username, password, token) => ({\r\n    type: types.authLoginSuccess,\r\n    payload: {\r\n        username,\r\n        password,\r\n        token,\r\n        error: false,\r\n    }\r\n})\r\n\r\nexport const loginError = (username, password, error) => ({\r\n    type: types.authLoginError,\r\n    payload: {\r\n        username,\r\n        password,\r\n        errorCode: error,\r\n        token: null,\r\n        error: true,\r\n    }\r\n})\r\n\r\nexport const logout = () => ({\r\n    type: types.authLogout,\r\n})\r\n\r\n\r\n// register\r\n\r\nexport const register = () => ({\r\n    type: types.authRegister,\r\n    payload: {}\r\n})\r\n\r\nexport const registerSuccess = () => ({\r\n    type: types.authRegisterSuccess,\r\n    payload: {\r\n        error: false,\r\n    }\r\n})\r\n\r\nexport const registerError = (error) => ({\r\n    type: types.authRegisterError,\r\n    payload: {\r\n        errorCode: error,\r\n        error: true,\r\n    }\r\n})\r\n\r\nexport const resetRegister = () => ({\r\n    type: types.authRegisterReset,\r\n    payload: {}\r\n})\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logout, startLoginUsernamePassword, validUser} from \"../../actions/auth\";\r\nimport {Spinner, Toast} from \"react-bootstrap\";\r\nimport {Auth, Hub} from \"aws-amplify\";\r\n\r\nvar Recaptcha = require('react-recaptcha');\r\n\r\nconst LoginScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [manual, setManual] = useState(false);\r\n    const [tokenRecaptcha, setTokenRecaptcha] = useState(null);\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    const {username, password} = formValues;\r\n\r\n    // handles\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (tokenRecaptcha !== null) {\r\n            setManual(true)\r\n            setLoading(true)\r\n            await dispatch(startLoginUsernamePassword(username, password, tokenRecaptcha))\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // Recibimos el token y almacenamos su respuesta en un estado con el hook useState.\r\n    const verifyCallback = async (response) => {\r\n        setTokenRecaptcha(response);\r\n    }\r\n    const toggleToast = () => dispatch(logout())\r\n    const toRegister = () => history.replace('/auth/register');\r\n\r\n    useEffect(() => {\r\n\r\n        Hub.listen('auth', ({payload: {event, data}}) => {\r\n            // eslint-disable-next-line default-case\r\n            switch (event) {\r\n                case \"signIn\":\r\n                    if (!manual) {\r\n                        dispatch(validUser(username, password, data))\r\n                    }\r\n                    break;\r\n                case \"customOAuthState_signIn\":\r\n                    // dispatch(validUser(username, password, data))\r\n                    break;\r\n                default:\r\n                    break;\r\n\r\n            }\r\n        });\r\n    }, [tokenRecaptcha]);\r\n\r\n    return (\r\n        <div className='site-wrapper'>\r\n\r\n            {\r\n                auth.error &&\r\n                (\r\n                    <div style={{\r\n                        zIndex: 1999999, position: 'absolute',\r\n                        top: 10,\r\n                        right: 10,\r\n                    }}>\r\n                        <Toast animation={true} autohide={true} onClose={toggleToast}>\r\n                            <Toast.Header>\r\n                                <strong className=\"mr-auto\">Login Error</strong>\r\n                            </Toast.Header>\r\n                            <Toast.Body>{auth.errorCode}</Toast.Body>\r\n                        </Toast>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center intro\">\r\n                    <div className=\"col-xs-12 col-sm-6 align-middle\">\r\n                        <h1 className=\"page-intro\">lasestrellas.tv</h1>\r\n                        <p>\r\n                            Nulla porttitor accumsan tincidunt. Donec rutrum congue leo eget malesuada. Mauris blandit\r\n                            aliquet elit, eget incident nib pulmonary a. Nella porttitor accumsan tincidunt. Donec\r\n                            sollicitudin molestie malesuada.\r\n                        </p>\r\n\r\n                        <p><strong>New Here?</strong></p>\r\n                        <a onClick={toRegister} className=\"btn signup\">Sign Up</a>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-xs-12 col-sm-6\">\r\n                        <div className=\"login-container\">\r\n                            <h2 className=\"form-heading\">Inicia sesión</h2>\r\n\r\n                            <form className=\"row\" onSubmit={handleLogin} id=\"login-form\">\r\n                                <div className=\"input-group\">\r\n                                    <i className=\"fa fa-user\" aria-hidden=\"true\"/>\r\n                                    <input required={true} tabIndex=\"1\" className=\"form-control input-lg\"\r\n                                           name=\"username\" type=\"text\"\r\n                                           value={username} onChange={handleInputChange}\r\n                                           maxLength=\"100\" title=\"Username\" placeholder=\"Username\"/>\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <i className=\"fa fa-lock\" aria-hidden=\"true\"/>\r\n                                    <input required={true} tabIndex=\"1\" className=\"form-control input-lg\"\r\n                                           name=\"password\"\r\n                                           value={password} onChange={handleInputChange}\r\n                                           type=\"password\" maxLength=\"100\" title=\"Password\" placeholder=\"password\"/>\r\n                                </div>\r\n\r\n                                <div style={{marginBottom: '20px', textAlign: \"center\", width: \"100%\"}}>\r\n\r\n                                    <Recaptcha\r\n                                        sitekey=\"6Ld7tGQaAAAAAHYNsE9KjVDFXhnF8ovKlaxSp4Sz\"\r\n                                        render=\"explicit\"\r\n                                        verifyCallback={verifyCallback}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    tokenRecaptcha &&\r\n                                    (\r\n                                        <button type={\"submit\"} className=\"btn w-100\">\r\n                                            {\r\n                                                !loading ?\r\n                                                    (\r\n                                                        <div>Sign In</div>\r\n                                                    ) :\r\n                                                    (\r\n                                                        <Spinner animation=\"border\" size=\"sm\"/>\r\n                                                    )\r\n                                            }\r\n                                        </button>\r\n                                    )\r\n                                }\r\n\r\n                                <br/> <a className=\"reset w-100\" tabIndex=\"4\" href=\"./\">Forgot password?</a>\r\n                            </form>\r\n\r\n                            <div className=\"social-login clearfix\">\r\n                                <p>- or sign in with -</p>\r\n                                <ul className=\"social-buttons text-center\">\r\n                                    <li>\r\n                                        <a className=\"facebook\"\r\n                                           onClick={() => Auth.federatedSignIn({customState: 'facebook'})}>\r\n                                            <i className=\"fa fa-facebook\" aria-hidden=\"true\"/>\r\n                                        </a>\r\n                                    </li>\r\n                                    {/* <li>\r\n                                        <a href=\"\" className=\"twitter\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"/></a>\r\n                                    </li>*/}\r\n                                    <li>\r\n                                        <a className=\"google-plus\"\r\n                                           onClick={() => Auth.federatedSignIn({customState: 'google'})}>\r\n                                            <i className=\"fa fa-google-plus\" aria-hidden=\"true\"/>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n    return (\r\n        <Route {...rest}\r\n               component={(props) => (\r\n                   (isAuthenticated)\r\n                       ? (<Component {...props} />)\r\n                       : (<Redirect to=\"/auth/login\"/>)\r\n               )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Spinner, Toast} from \"react-bootstrap\";\r\nimport {registerToCognito, resetRegister} from \"../../actions/auth\";\r\n\r\nvar Recaptcha = require('react-recaptcha');\r\n\r\nconst RegisterScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const [tokenRecaptcha, setTokenRecaptcha] = useState(null);\r\n    const register = useSelector(state => state.register)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        username: '',\r\n        password: '',\r\n        email: ''\r\n    })\r\n    const {username, password, email} = formValues;\r\n\r\n    // handles\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!!tokenRecaptcha) {\r\n            setLoading(true)\r\n            await dispatch(registerToCognito(username, password, email))\r\n            setLoading(false)\r\n            setTimeout(() => {\r\n                toggleToast()\r\n                toLogin()\r\n            }, 2000)\r\n        }\r\n    }\r\n\r\n    // Recibimos el token y almacenamos su respuesta en un estado con el hook useState.\r\n    const verifyCallback = async (response) => {\r\n        setTokenRecaptcha(response);\r\n    }\r\n\r\n    const toggleToast = () => dispatch(resetRegister())\r\n    const toLogin = () => history.replace('/auth/login');\r\n\r\n    return (\r\n        <div className='site-wrapper'>\r\n\r\n            {\r\n                register.init ?\r\n                    register.error ?\r\n                        (\r\n                            <div style={{\r\n                                zIndex: 1999999, position: 'absolute',\r\n                                top: 10,\r\n                                right: 10,\r\n                            }}>\r\n                                <Toast animation={true} autohide={true} onClose={toggleToast}>\r\n                                    <Toast.Header>\r\n                                        <strong className=\"mr-auto\">Login Error</strong>\r\n                                    </Toast.Header>\r\n                                    <Toast.Body>{register.errorCode}</Toast.Body>\r\n                                </Toast>\r\n                            </div>\r\n                        ) :\r\n                        (\r\n                            <div style={{\r\n                                zIndex: 1999999, position: 'absolute',\r\n                                top: 10,\r\n                                right: 10,\r\n                            }}>\r\n                                <Toast animation={true} autohide={true} onClose={toggleToast}>\r\n                                    <Toast.Header>\r\n                                        <strong className=\"mr-auto\">Confirm account</strong>\r\n                                    </Toast.Header>\r\n                                    <Toast.Body>\"We are send a email to confirm your account.\"</Toast.Body>\r\n                                </Toast>\r\n                            </div>\r\n                        )\r\n                    :\r\n                    (<div/>)\r\n\r\n            }\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center intro  justify-content-center\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"login-container\">\r\n                            <h2 className=\"form-heading\">Register</h2>\r\n\r\n                            <form className=\"row\" onSubmit={handleRegister} id=\"login-form\">\r\n                                <div className=\"input-group\">\r\n                                    <i className=\"fa fa-user\" aria-hidden=\"true\"/>\r\n                                    <input required={true} tabIndex=\"1\" className=\"form-control input-lg\"\r\n                                           name=\"username\" type=\"text\"\r\n                                           value={username} onChange={handleInputChange}\r\n                                           maxLength=\"100\" title=\"Username\" placeholder=\"Username\"/>\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <i className=\"fa fa-envelope-o\" aria-hidden=\"true\"/>\r\n                                    <input required={true} tabIndex=\"1\" className=\"form-control input-lg\"\r\n                                           name=\"email\" type=\"text\"\r\n                                           value={email} onChange={handleInputChange}\r\n                                           maxLength=\"100\" title=\"Email\" placeholder=\"Email\"/>\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <i className=\"fa fa-lock\" aria-hidden=\"true\"/>\r\n                                    <input required={true} tabIndex=\"1\" className=\"form-control input-lg\"\r\n                                           name=\"password\"\r\n                                           value={password} onChange={handleInputChange}\r\n                                           type=\"password\" maxLength=\"100\" title=\"Password\" placeholder=\"password\"/>\r\n                                </div>\r\n\r\n                                <div style={{marginBottom: '20px', textAlign: \"center\", width: \"100%\"}}>\r\n\r\n                                    <Recaptcha\r\n                                        sitekey=\"6Ld7tGQaAAAAAHYNsE9KjVDFXhnF8ovKlaxSp4Sz\"\r\n                                        render=\"explicit\"\r\n                                        verifyCallback={verifyCallback}\r\n                                    />\r\n                                </div>\r\n\r\n                                {\r\n                                    tokenRecaptcha &&\r\n                                    (\r\n                                        <button type={\"submit\"} className=\"btn w-100\">\r\n                                            {\r\n                                                !loading ?\r\n                                                    (\r\n                                                        <div>Sign In</div>\r\n                                                    ) :\r\n                                                    (\r\n                                                        <Spinner animation=\"border\" size=\"sm\"/>\r\n                                                    )\r\n                                            }\r\n                                        </button>\r\n                                    )\r\n                                }\r\n\r\n                                <br/>\r\n                                <a className=\"reset w-100\" tabIndex=\"4\" onClick={toLogin}>Already account?</a>\r\n                            </form>\r\n\r\n                            {/*<div className=\"social-login clearfix\">\r\n                                <p>- or sign in with -</p>\r\n                                <ul className=\"social-buttons text-center\">\r\n                                    <li>\r\n                                        <a href=\"\" className=\"facebook\"><i className=\"fa fa-facebook\"\r\n                                                                           aria-hidden=\"true\"/></a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"\" className=\"twitter\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"/></a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"\" className=\"google-plus\"><i className=\"fa fa-google-plus\"\r\n                                                                              aria-hidden=\"true\"/></a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {Auth} from \"aws-amplify\";\r\n\r\nconst ProfileScreen = () => {\r\n\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n   /* Auth.currentAuthenticatedUser({\r\n        bypassCache: false  // Optional, By default is false. If set to true, this call will send a request to Cognito to get the latest user data\r\n    }).then(user => console.log(user))\r\n        .catch(err => console.log(err));*/\r\n\r\n    return (\r\n        <div>\r\n            <h1>Hi! {auth.username}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({isAuthenticated, component: Component, ...rest}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n               component={(props) => (\r\n                   (!isAuthenticated)\r\n                       ? (<Component {...props} />)\r\n                       : (<Redirect to=\"/\"/>)\r\n               )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {signOut} from \"../../actions/auth\";\r\n\r\nconst SignOutScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(signOut())\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            signing Out...\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignOutScreen;\r\n","import React, {useEffect} from 'react';\r\nimport {Auth} from \"aws-amplify\";\r\n\r\nconst FacebookLoginScreen = () => {\r\n\r\n    useEffect(() => {\r\n        if (!window.FB) createScript();\r\n    }, [])\r\n\r\n    const signIn = () => {\r\n        const fb = window.FB;\r\n        fb.getLoginStatus(response => {\r\n            if (response.status === 'connected') {\r\n                getAWSCredentials(response.authResponse);\r\n            } else {\r\n                fb.login(\r\n                    response => {\r\n                        if (!response || !response.authResponse) {\r\n                            return;\r\n                        }\r\n                        getAWSCredentials(response.authResponse);\r\n                    },\r\n                    {\r\n                        // the authorized scopes\r\n                        scope: 'public_profile,email'\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    const getAWSCredentials = (response) => {\r\n        const {accessToken, expiresIn} = response;\r\n        const date = new Date();\r\n        const expires_at = expiresIn * 1000 + date.getTime();\r\n        if (!accessToken) {\r\n            return;\r\n        }\r\n\r\n        const fb = window.FB;\r\n        fb.api('/me', {fields: 'name,email'}, response => {\r\n            const user = {\r\n                name: response.name,\r\n                email: response.email\r\n            };\r\n\r\n            Auth.federatedSignIn('facebook', {token: accessToken, expires_at}, user)\r\n                .then(credentials => {\r\n                    console.log(credentials);\r\n                });\r\n        });\r\n    }\r\n\r\n    const createScript = () => {\r\n        // load the sdk\r\n        window.fbAsyncInit = fbAsyncInit;\r\n        const script = document.createElement('script');\r\n        script.src = 'https://connect.facebook.net/en_US/sdk.js';\r\n        script.async = true;\r\n        script.onload = initFB;\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    const initFB = () => {\r\n        const fb = window.FB;\r\n        console.log('FB SDK initialized');\r\n    }\r\n\r\n    const fbAsyncInit = () => {\r\n        // init the fb sdk client\r\n        const fb = window.FB;\r\n        fb.init({\r\n            appId: '690657391628258',\r\n            cookie: true,\r\n            xfbml: true,\r\n            version: 'v2.11'\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={signIn}>Sign in with Facebook</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FacebookLoginScreen;\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport {PrivateRoute} from \"./PrivateRoutes\";\r\nimport RegisterScreen from \"../components/auth/RegisterScreen\";\r\nimport ProfileScreen from \"../components/pages/ProfileScreen\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {PublicRoute} from \"./PublicRoute\";\r\nimport SignOutScreen from \"../components/auth/SignOutScreen\";\r\nimport FacebookLoginScreen from \"../components/auth/FacebookLoginScreen\";\r\n\r\nconst AppRoutes = () => {\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute\r\n                    path=\"/auth/login\"\r\n                    component={LoginScreen}\r\n                    isAuthenticated={!!auth.token}\r\n                />\r\n\r\n                <PublicRoute\r\n                    path=\"/auth/register\"\r\n                    component={RegisterScreen}\r\n                    isAuthenticated={!!auth.token}\r\n                />\r\n\r\n                <PublicRoute\r\n                    path=\"/auth/facebook\"\r\n                    component={FacebookLoginScreen}\r\n                    isAuthenticated={!!auth.token}\r\n                />\r\n\r\n                <PrivateRoute\r\n                    path=\"/auth/signOut\"\r\n                    component={SignOutScreen}\r\n                    isAuthenticated={!!auth.token}\r\n                />\r\n\r\n                <PrivateRoute\r\n                    path=\"/\"\r\n                    component={ProfileScreen}\r\n                    isAuthenticated={!!auth.token}\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import {types} from '../types/types';\r\n\r\nconst initialState = () => {\r\n    return JSON.parse(localStorage.getItem('lasestrellas_auth')) || {\r\n        error: false\r\n    };\r\n}\r\n\r\nexport const authReducer = (state = initialState(), action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                error: false\r\n            }\r\n        case types.authLoginSuccess:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                error: false\r\n            }\r\n        case types.authLoginError:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                error: true\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                error: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {authReducer} from \"../reducers/authReducer\";\r\nimport {registerReducer} from \"../reducers/registerReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    register: registerReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import {types} from '../types/types';\r\n\r\nconst initialState = () => {\r\n    return {\r\n        init: false,\r\n        error: false\r\n    };\r\n}\r\n\r\nexport const registerReducer = (state = initialState(), action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authRegister:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                init: false,\r\n                error: false\r\n            }\r\n        case types.authRegisterSuccess:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                init: true,\r\n            }\r\n        case types.authRegisterError:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                init: true,\r\n            }\r\n        case types.authRegisterReset:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                init: false,\r\n                error: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport AppRoutes from \"./routes/AppRoutes\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nexport const AuthApp = () => {\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRoutes/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {AuthApp} from \"./AuthApp\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles/styles.css\"\n\nimport Amplify from 'aws-amplify';\nimport {awsconfig} from \"./aws-exports\";\n\nAmplify.configure(awsconfig);\n\nReactDOM.render(\n    <AuthApp/>,\n    document.getElementById('root')\n);\n","export const awsconfig = {\r\n\r\n    // REQUIRED - Amazon Cognito Region\r\n    region: 'us-east-1',\r\n\r\n    // OPTIONAL - Amazon Cognito User Pool ID\r\n    userPoolId: 'us-east-1_JDBGCgILo',\r\n\r\n    // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\r\n    userPoolWebClientId: 'hm2uhgm53rpsq5kdvrog4ocee',\r\n\r\n    // OPTIONAL - Enforce user authentication prior to accessing AWS resources or not\r\n    mandatorySignIn: true,\r\n\r\n    // OPTIONAL - Hosted UI configuration\r\n    oauth: {\r\n        domain: 'poctestelev.auth.us-east-1.amazoncognito.com',\r\n        // scope: ['phone', 'email', 'profile', 'openid', 'aws.cognito.signin.user.admin'],\r\n        redirectSignIn: 'http://localhost:3000/',\r\n        redirectSignOut: 'http://localhost:3000/',\r\n        responseType: 'token' // or 'token', note that REFRESH token will only be generated when the responseType is code\r\n    }\r\n}\r\n"],"sourceRoot":""}